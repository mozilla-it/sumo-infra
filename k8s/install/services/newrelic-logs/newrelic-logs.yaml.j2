---
apiVersion: v1
kind: Namespace
metadata:
  name: newrelic
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: fluent-bit-read
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: fluent-bit-read
subjects:
  - kind: ServiceAccount
    name: newrelic-logging
    namespace: newrelic
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluent-bit-read
rules:
  - apiGroups: [""]
    resources:
      - namespaces
      - pods
    verbs: ["get", "list", "watch"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: newrelic-logging
  namespace: newrelic
automountServiceAccountToken: true
---
apiVersion: v1
kind: Secret
metadata:
  name: newrelic-logging-config
  namespace: newrelic
  labels:
    k8s-app: newrelic-logging
    version: v1
    kubernetes.io/cluster-service: "true"
    name: newrelic-logging
    app.kubernetes.io/name: newrelic-logging
type: Opaque
data:
  license: {{ NR_LICENSE_B64 }}
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: newrelic-logging
  namespace: newrelic
  labels:
    k8s-app: newrelic-logging
    version: v1
    kubernetes.io/cluster-service: "true"
    name: newrelic-logging
    app.kubernetes.io/name: newrelic-logging
spec:
  selector:
    matchLabels:
      name: newrelic-logging
  template:
    metadata:
      labels:
        k8s-app: newrelic-logging
        version: v1
        kubernetes.io/cluster-service: "true"
        name: newrelic-logging
        app.kubernetes.io/name: newrelic-logging
    spec:
      serviceAccountName: newrelic-logging
      containers:
        - name: newrelic-logging
          env:
            - name: ENDPOINT
              value : "https://log-api.newrelic.com/log/v1"
            - name: SOURCE
              value: "kubernetes"
            - name: LICENSE_KEY
              valueFrom:
                secretKeyRef:
                  name: newrelic-logging-config
                  key: license
            - name: CLUSTER_NAME
              value: {{ CLUSTER_NAME }}
            - name: LOG_LEVEL
              value: "info"
            # Allowed values: "docker", "cri"
            - name: LOG_PARSER
              value: "docker"
            - name: PATH
              value: "/var/log/containers/*.log"
          image: newrelic/newrelic-fluentbit-output:1.8.1
          command:
            - /fluent-bit/bin/fluent-bit
            - -c
            - /fluent-bit/etc/fluent-bit.conf
            - -e
            - /fluent-bit/bin/out_newrelic.so
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 250m
              memory: 64Mi
          volumeMounts:
            - name: config
              mountPath: /fluent-bit/etc
            - name: varlog
              mountPath: /var
      terminationGracePeriodSeconds: 10
      volumes:
        - name: config
          configMap:
            name: fluent-bit-config
        - name: varlog
          hostPath:
            path: /var
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: newrelic
  labels:
    k8s-app: newrelic-logging
data:
  # Configuration files: server, input, filters and output
  # ======================================================
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Log_Level     ${LOG_LEVEL}
        Daemon        off
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020

    @INCLUDE input-kubernetes.conf
    @INCLUDE output-newrelic.conf
    @INCLUDE filter-kubernetes.conf

  input-kubernetes.conf: |
    [INPUT]
        Name              tail
        Tag               kube.*
        Path              ${PATH}
        Parser            ${LOG_PARSER}
        DB                /var/log/flb_kube.db
        Mem_Buf_Limit     7MB
        Skip_Long_Lines   On
        Refresh_Interval  10

  filter-kubernetes.conf: |
    [FILTER]
        Name record_modifier
        Match *
        Record cluster_name ${CLUSTER_NAME}

    [FILTER]
        Name           kubernetes
        Match          kube.*
        Kube_URL       https://kubernetes.default.svc.cluster.local:443
        Merge_Log      Off

  output-newrelic.conf: |
    [OUTPUT]
        Name  newrelic
        Match *
        licenseKey ${LICENSE_KEY}
        endpoint ${ENDPOINT}

  parsers.conf: |
    # Relevant parsers retrieved from: https://github.com/fluent/fluent-bit/blob/master/conf/parsers.conf
    [PARSER]
        Name         docker
        Format       json
        Time_Key     time
        Time_Format  %Y-%m-%dT%H:%M:%S.%L
        Time_Keep    On

    [PARSER]
        Name cri
        Format regex
        Regex ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<message>.*)$
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L%z
